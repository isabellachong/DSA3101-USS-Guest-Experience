# -*- coding: utf-8 -*-
"""DSA3101 Group Project (Group 3, Subgroup A, Question 1)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LMMEZRes7h8Fj4Q7NYFULe5Q5X-ksCBC

# Subgroup A, Question 1

## Importing From Google Drive
"""

# Importing From Google Drive
from google.colab import drive
drive.mount('/content/drive')

"""## Importing The Necessary Packages

For this question, we will need to import several packages, including pandas for data cleaning and transformation, numpy for numerical computation, matplotlib and seaborn for data visualizations.
"""

# Importing The Necessary Packages

# 1. pandas - to be used for data cleaning
import pandas as pd

# 2. numpy - to be used for numerical computing
import numpy as np

# 3. matplotlib - to be used for data visualizations
import matplotlib.pyplot as plt

# 4. seaborn - to be used for data visualizations
import seaborn as sns

"""## Other Settings Implemented Using Pandas

This is an optional step but the following block of code below helps to change the output structure of the code such that

**1) All the columns of the dataset will be printed**

**2) The width of the dataset output is not limited to the display width of Google Colab**

**3) Prevent wrapping the output to multiple lines on Google Colab to improve readibility**
"""

# Show all columns of the dataset when printed
pd.set_option('display.max_columns', None)

# Don't limit the display width of the output
pd.set_option('display.width', None)

# Don't wrap the output to multiple lines
pd.set_option('display.expand_frame_repr', False)

"""## Reading The Excel File From Google Drive To Google Colab"""

# Specify the file path of the excel file
file_path = '/content/drive/MyDrive/uss_survey_responses.xlsx'

# Read the excel file into Google Colab using read_excel
df = pd.read_excel(file_path)

# Display the first few rows of the dataset
print(df.head())

"""## Examining The Number Of Rows And Columns Of The Dataset

We can examine the number of rows and columns of the dataset using `df.shape`, where the first number represents the number of rows and the second number represents the number of columns of the dataset.
"""

# Finding the number of rows and columns of the dataset
num_rows, num_columns = df.shape

# Displaying the results
print("Number of Rows:", num_rows)
print("Number of Columns:", num_columns)

"""We observe that there are 505 rows and 57 columns in the dataset.
The columns include the email address of the survey responders, as well as their responses to the 20 questions in the survey (some of the survey questions have various subparts, hence more than 20 columns altogether). We currently have 505 survey responses in our dataset.

Since the email address is considered highly confidential, in order to maintain data integrity to prevent exposure of information and privacy leaks, we should remove the `email address` column. Also, the `time_entry` column is not really important in our analysis as this column just represents when the respondants have completed the survey (within a period of a few days, all recent entries). We can also remove the column.
"""

# Removing the email addressand time_entry column of the dataset
df = df.drop('Email Address', axis = 1)
df = df.drop('time_entry', axis = 1)

# Displaying the first few rows of the updated dataset
print(df.head())

"""## What Each Column Of The Dataset Represent (From The Survey Questions)

Here is a description of the what each of the various columns of the dataset represent:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        table {
            width: 50%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        th, td {
            border: 1px solid black;
            padding: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <table>
        <thead>
            <tr>
                <th>Column Name</th>
                <th>Description Of Column</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>q1</td>
                <td>Which type of theme park visitor best describes you?</td>
            </tr>
            <tr>
                <td>q2_1</td>
                <td>What is your age range?</td>
            </tr>
            <tr>
                <td>q2_2</td>
                <td>What is your gender?</td>
            </tr>
            <tr>
                <td>q3</td>
                <td>Are you a tourist or a local?</td>
            </tr>
            <tr>
                <td>q4_1</td>
                <td>For the category on thrill rides, what is the average time you queued for?</td>
            </tr>
            <tr>
                <td>q4_2</td>
                <td>For the category on interactive exhibits, what is the average time you queued for?</td>
            </tr>
            <tr>
                <td>q4_3</td>
                <td>For the category on performances, what is the average time you queued for?</td>
            </tr>
            <tr>
                <td>q4_4</td>
                <td>For the category on food and dining, what is the average time you queued for?</td>
            </tr>
            <tr>
                <td>q5_1</td>
                <td>For the category on thrill rides, what is considered an unacceptable wait time? (Integer in Minutes)</td>
            </tr>
            <tr>
                <td>q5_2</td>
                <td>For the category on interactive exhibits, what is considered an unacceptable wait time? (Integer in Minutes)</td>
            </tr>
            <tr>
                <td>q5_3</td>
                <td>For the category on performances, what is considered an unacceptable wait time? (Integer in Minutes)</td>
            </tr>
            <tr>
                <td>q5_4</td>
                <td>For the category on food and dining, what is considered an unacceptable wait time? (Integer in Minutes)</td>
            </tr>
            <tr>
                <td>q6</td>
                <td>The type of attractions you enjoy the most when visiting USS</td>
            </tr>
            <tr>
                <td>q7</td>
                <td>Factors that will influence your decision to visit a theme park like USS?</td>
            </tr>
            <tr>
                <td>q8</td>
                <td>What type of events influence your decision to visit?</td>
            </tr>
            <tr>
                <td>q9</td>
                <td>How long do you usually spend at USS? (Integer in Hours)</td>
            </tr>
            <tr>
                <td>q10</td>
                <td>When do you usually visit theme parks or attractions like USS?</td>
            </tr>
            <tr>
                <td>q11</td>
                <td>When do you typically purchase meals or snacks at the eateries/restaurants?</td>
            </tr>
            <tr>
                <td>q12</td>
                <td>How do you usually navigate a theme park like USS?</td>
            </tr>
            <tr>
                <td>q13</td>
                <td>Would you be willing to wear a digital watch given by USS to track your location and activity?</td>
            </tr>
            <tr>
                <td>q14_1</td>
                <td>At what time of the day do you usually visit roller coasters?</td>
            </tr>
            <tr>
                <td>q14_2</td>
                <td>At what time of the day do you usually visit water rides?</td>
            </tr>
            <tr>
                <td>q14_3</td>
                <td>At what time of the day do you usually visit 3D/4D experiences?</td>
            </tr>
            <tr>
                <td>q14_4</td>
                <td>At what time of the day do you usually visit performances?</td>
            </tr>
            <tr>
                <td>q14_5</td>
                <td>At what time of the day do you usually visit roadshows?</td>
            </tr>
            <tr>
                <td>q14_6</td>
                <td>At what time of the day do you usually visit eateries and restaurants?</td>
            </tr>
            <tr>
                <td>q14_7</td>
                <td>At what time of the day do you usually visit souvenir shops?</td>
            </tr>
            <tr>
                <td>q14_8</td>
                <td>At what time of the day do you usually visit other rides (carousel rides, teacup rides etc.)?</td>
            </tr>
            <tr>
                <td>q15</td>
                <td>How likely are you to recommend USS to others?</td>
            </tr>
            <tr>
                <td>q16_1</td>
                <td>How satisfied are you with the overall service of the queuing system?</td>
            </tr>
            <tr>
                <td>q16_2</td>
                <td>How satisfied are you with the overall service of retail experience?</td>
            </tr>
            <tr>
                <td>q16_3</td>
                <td>How satisfied are you with the overall service of eateries/restaurants?</td>
            </tr>
            <tr>
                <td>q16_4</td>
                <td>How satisfied are you with the overall service of photo taking exhibitions?</td>
            </tr>
            <tr>
                <td>q16_5</td>
                <td>How satisfied are you with the overall service of entertainment attractions?</td>
            </tr>
            <tr>
                <td>q17_1</td>
                <td>Give an overall rating for ticketing information accessibility</td>
            </tr>
            <tr>
                <td>q17_2</td>
                <td>Give an overall rating for rides and attractions</td>
            </tr>
            <tr>
                <td>q17_3</td>
                <td>Give an overall rating for entertainment and performances</td>
            </tr>
            <tr>
                <td>q17_4</td>
                <td>Give an overall rating for food and beverage</td>
            </tr>
            <tr>
                <td>q17_5</td>
                <td>Give an overall rating for merchandise and shopping</td>
            </tr>
            <tr>
                <td>q17_6</td>
                <td>Provide an overall rating for crowd management, comfort and staff helpfulness</td>
            </tr>
            <tr>
                <td>q18_1</td>
                <td>For ticketing information accessibility, which of the following services are you not satisfied with?</td>
            </tr>
            <tr>
                <td>q18_2</td>
                <td>For rides and attractions, which of the following services are you not satisfied with?</td>
            </tr>
            <tr>
                <td>q18_3</td>
                <td>For entertainment and performances, which of the following services are you not satisfied with?</td>
            </tr>
            <tr>
                <td>q18_4</td>
                <td>For food and beverage, which of the following services are you not satisfied with?</td>
            </tr>
            <tr>
                <td>q18_5</td>
                <td>For merchandise and shopping, which of the following services are you not satisfied with?</td>
            </tr>
            <tr>
                <td>q18_6</td>
                <td>For crowd management, comfort and staff helpfulness, which of the following services are you not satisfied with?</td>
            </tr>
            <tr>
                <td>q19_1</td>
                <td>How important is ticketing information accessibility to your overall satisfaction?</td>
            </tr>
            <tr>
                <td>q19_2</td>
                <td>How important is crowd management to your overall satisfaction?</td>
            </tr>
            <tr>
                <td>q19_3</td>
                <td>How important is staff helpfulness to your overall satisfaction?</td>
            </tr>
            <tr>
                <td>q19_4</td>
                <td>How important is safety and cleanliness to your overall satisfaction?</td>
            </tr>
            <tr>
                <td>q19_5</td>
                <td>How important is rides and attractions to your overall satisfaction?</td>
            </tr>
            <tr>
                <td>q19_6</td>
                <td>How important is food and beverage to your overall satisfaction?</td>
            </tr>
            <tr>
                <td>q19_7</td>
                <td>How important is merchandise and shopping to your overall satisfaction?</td>
            </tr>
            <tr>
                <td>q19_8</td>
                <td>How important is entertainment and performances to your overall satisfaction?</td>
            </tr>
            <tr>
                <td>q20</td>
                <td>Is there any other feedback about your USS experience that you want to mention?</td>
            </tr>
        </tbody>
    </table>
</body>
</html>

****************************************************************************************************************************************************************

### Business Question 1: Key factors influencing guest satisfaction

#### Overview Of Guest Satisfaction In Entertainment Venues Like USS:

Guest satisfaction is a critical factor for entertainment venues such as Universal Studios Singapore (USS). A high satisfaction rate enhances USS’s reputation, attracting new visitors through positive reviews and word-of-mouth while encouraging repeat visits from guests who have had enjoyable experiences.

Conversely, poor guest satisfaction can lead to decreased customer retention and reduced foot traffic, ultimately impacting revenue and profitability. If sustained, this could pose financial challenges that may affect USS’s long-term viability. To mitigate this risk, USS must implement strategic initiatives to enhance customer satisfaction, ensuring continued business growth and sustainability.

However, before implementing strategies to enhance guest satisfaction, it is essential to first identify the key factors contributing to customer dissatisfaction at Universal Studios Singapore (USS). A thorough analysis is needed to pinpoint the primary causes of dissatisfaction and further investigate the underlying reasons behind these issues.

By understanding these root causes, USS can develop targeted strategies that effectively address customer concerns and enhance satisfaction levels. Additionally, identifying the most influential factors in guest satisfaction allows USS to prioritize improvements that have the greatest impact on overall visitor experience.

To tackle this business question, we need to

Step 1: Extract the relevant columns for determining the current guest satisfaction scores for the various sections at USS, as well as the overall guest satisfaction score of USS.

Step 2: Extract the relevant columns to determine the most important factors that will affect guest satisfaction scores.

Step 3: Identifying pain points from customers that affect satisfaction rates for the various sections at USS.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#### Step 1: Extract the relevant columns for determining the current guest satisfaction scores for the various sections at USS, as well as the overall guest satisfaction score of USS

For determining the current guest satisfaction scores for the various sections at USS, as well as the overall guest satisfaction score of USS, the relevant columns identified will be

Overall Guest Satisfaction:
*   `q15` (How likely are you to recommend USS to others?)

Guest Satisfaction For Various Sections In USS:
*   `q17_1` (Give an overall rating for ticketing information accessibility)
*   `q17_2` (Give an overall rating for rides and attractions)
*   `q17_3` (Give an overall rating for entertainment and performances)
*   `q17_4` (Give an overall rating for food and beverage)
*   `q17_5` (Give an overall rating for merchandise and shopping)
*   `q17_6` (Give an overall rating for crowd management, comfort and staff helpfulness)



We will extract the relevant columns from the dataset first to remove all the unnecessary columns as well as for better readibility and faster running times.
"""

# Extracting the relevant columns for analysis (q15, q17)
df_satisfaction_scores = df[['q15', 'q17_1', 'q17_2', 'q17_3', 'q17_4', 'q17_5', 'q17_6']]

# Displaying the releavnt columns
print(df_satisfaction_scores.head())

"""First, we will look at the overall satisfaction rates for guests that visited USS (represented by column q15 of the dataset).

The scores for q15 of the dataset range from 1 to 10, where 1 means will never recommend and 10 means highly recommend. We will classify the guests into three types - promoters, detractors and passives for easier comparison.

What each type of guests represent and how to classify them:

1) Promoters: Guests who rated 9-10 in the survey conducted - Loyal and enthusiastic customers

2) Passives: Guests who rated 7-8 in the survey conducted - Indifferent or would recommend but not strongly

3) Detractors: Guests who rated 0-6 in the survey conducted - Unlikely to revisit, may even discourage others

We can first visualize the number of promoters, passives and detractors among the 505 responses to get a gauge of the current satisfaction rates at USS using bar graphs.
"""

# Create a count of values in q15
q15_counts = df_satisfaction_scores['q15'].value_counts().sort_index()

# Create the bar plot
plt.figure(figsize = (15, 8))
sns.barplot(x = q15_counts.index, y = q15_counts.values)

# Add title and labels
plt.title('Overall Satisfaction Score Of USS')
plt.xlabel('Satisfaction Score (1-10)')
plt.ylabel('Number Of Guests')

# Add grid lines for better readability
plt.grid(axis = 'y', linestyle = '--', alpha = 0.7)

# Annotate the bars with the count values
for i, count in enumerate(q15_counts.values):
    plt.text(i, count + 0.1, str(count), ha='center', va='bottom', fontsize=12)

# Show the plot
plt.show()

"""Key Insights From The Graph:

1) The mode overall satisfaction score of USS from the guests surveyed is 7, which is in the passive category. This means that most guests are fairly satisfied with USS, but there might be several problems that USS is currently facing that reduce their satisfaction ratings from the promoters category to the passive category.

2) There are a significant number of guests who gave an overall satisfaction score of 5 and 6 (more than 120 people out of the 505 surveyed, over 20%) which is in the detractors range. This shows that more than 20% of the survey respondnats are not satisfied with the overall USS experience.

3) The number of guests who rated 9 or 10 in the overall satisfaction score contribute to less than 20% of the total participants (around 90 people out of 505 surveyed, 18% approximately). We can conclude that the number of detractors is higher than the number of promoters, which is highly concerning.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Next, we can verify by comparing the number of promoters, passives and detractors in the survey responses by grouping them (create a new column called `person_type`) and creating a second bar chart.

We first need to define a function `categorize_nps` which categorizes the survey respondants based on their overall satisfaction scores (value of column q15).
"""

# Create a new column 'person_type' based on q15 values
def categorize_nps(score):
    if score >= 9:
        return "Promoters"
    elif score >= 7:
        return "Passives"
    else:
        return "Detractors"

# Apply the function to create the new column
df_satisfaction_scores = df[['q15', 'q17_1', 'q17_2', 'q17_3', 'q17_4', 'q17_5', 'q17_6']].copy()
df_satisfaction_scores['person_type'] = df_satisfaction_scores['q15'].apply(categorize_nps)

"""After creating the new column `person_type` and added to the resulting dataset `df_satisfaction_scores`, we can now proceed to illustrate the count of each type of respondant using a bar graph."""

# Define the desired order
order = ["Promoters", "Passives", "Detractors"]

# Count the number of each person_type and reindex to match the desired order
person_type_counts = df_satisfaction_scores['person_type'].value_counts().reindex(order)

# Create a bar plot
plt.figure(figsize = (10, 6))
ax = sns.barplot(x = person_type_counts.index, y = person_type_counts.values)

# Add title and labels
plt.title('Respondent Types Based On Overall Satisfaction Scores')
plt.xlabel('Respondent Type')
plt.ylabel('Number Of Respondants')

# Add grid lines for better readability
plt.grid(axis = 'y', linestyle = '--', alpha = 0.3)

# Add number labels on top of bars
for i, value in enumerate(person_type_counts.values):
    ax.text(i, value + 1, str(value), ha='center', va='bottom', fontsize=10)

# Show the plot
plt.show()

"""Key Insights From The Graph:

1) Based on the three respondant types, the number of passives is the largest with over 250 survey respondants who gave an overall rating of 7 or 8.

2) The number of detractors is higher than the number of promoters (similar obervation as the first plotted bar chart). The  number of detractors is reaching 150 while the number of promoters is below 100.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Next, we can evalutate the overall satisfaction rates in USS by calculating the Net Promoter Score (NPS). In the context of USS, the NPS measures the likelihood of visitors recommending USS to others. The higher the value of NPS, the more likely visitors will recommend to others.

The formula for NPS is given: **NPS = %Promoters - %Detractors**

The aim of USS is to have a NPS of 30, which lies in the great/excellent range of the graph defined in the website below. Having a negative NPS score would be an indication that USS has a lot of issues to address while a NPS score of 0 to 30 suggests that USS is performing a satisfactory job in trying to satisfy its customers, but there is still room for improvement.

Link To NPS Information: (https://www.retently.com/blog/good-net-promoter-score/)

We can first find the exact number of promoters, passives and detractors in the dataset that we have using the `value_counts()` method, coupled with the `get` method to obtain the specific counts of each type.
"""

# Count the number of respondents in each category
nps_counts = df_satisfaction_scores['person_type'].value_counts()

# Get specific counts
num_promoters = nps_counts.get('Promoters', 0)
num_passives = nps_counts.get('Passives', 0)
num_detractors = nps_counts.get('Detractors', 0)

# Display the individual counts
print(f"\nNumber of Promoters: {num_promoters}")
print(f"Number of Passives: {num_passives}")
print(f"Number of Detractors: {num_detractors}")

"""We can see that there are 95 promoters, 266 passives and 144 detractors in the dataset. For the NPS calculation, we only need the number of promoters and the number of detractors (95 promoters, 144 detractors). Next, we can compute the percentage of promoters and detractors in the dataset."""

# Calculate total respondents
total_respondents = num_promoters + num_passives + num_detractors

# Calculate percentages
promoters_percentage = (num_promoters / total_respondents) * 100
passives_percentage = (num_passives / total_respondents) * 100
detractors_percentage = (num_detractors / total_respondents) * 100

# Display the counts and percentages
print(f"Promoters: {promoters_percentage:.1f}%")
print(f"Passives: {passives_percentage:.1f}%")
print(f"Detractors: {detractors_percentage:.1f}%")

"""The promoters contributes to 18.8% of the total respondants while detractors contribute to 28.5% of the total respondants. After obtaining the percentages of promoters and detractors, we can calculate the NPS directly using these two figures."""

# Calculate the NPS score
nps_score = promoters_percentage - detractors_percentage

# Print out the result
print(f"\nNPS Score: {nps_score:.1f}%")

"""From the NPS, we can see that the result obtained is -9.7%, which is a negative value. Based on the score range of NPS, this suggests that USS is not doing enough to satisfy its customers and there is room of improvement for USS to increase its NPS to a value above 30. Due to the highly concerning NPS value, we need to proceed to the next step of the analysis by pinpointing which sections of USS (eg. food and beverage, attractions, performances etc.) are performing poorly (low ratings/scores).

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

We will delve deeper into the various sections of USS and identify the sections listed with the lowest customer satisfaction rates. We first need to analyze the distributions of the satisfaction scores of each section of USS using bar graphs.

The six sections in USS that we have identified are:

*   **Ticketing Information Accessibility (q17.1)**
*   **Rides And Attractions (q17.2)**
*   **Entertainment And Performances (q17.3)**
*   **Food And Beverage (q17.4)**
*   **Merchandise And Shopping (q17.5)**
*   **Crowd Management, Comfort And Staff Helpfulness (q17.6)**

##### Section 1: Ticketing Information And Accessibility
"""

# Create a count of values in q17_1
q17_1_counts = df_satisfaction_scores['q17_1'].value_counts().sort_index()

# Create the bar plot
plt.figure(figsize = (15, 8))
sns.barplot(x = q17_1_counts.index, y = q17_1_counts.values, color = "green")

# Add title and labels
plt.title('Overall Rating Of Ticketing Information Accessibility')
plt.xlabel('Rating (1-5)')
plt.ylabel('Number Of Respondants')

# Add grid lines for better readability
plt.grid(axis = 'y', linestyle = '--', alpha = 0.7)

# Annotate the bars with the count values
for i, count in enumerate(q17_1_counts.values):
    plt.text(i, count + 0.1, str(count), ha='center', va='bottom', fontsize=12)

# Show the plot
plt.show()

"""##### Section 2: Rides And Attractions"""

# Create a count of values in q17_1
q17_2_counts = df_satisfaction_scores['q17_2'].value_counts().sort_index()

# Create the bar plot
plt.figure(figsize = (15, 8))
sns.barplot(x = q17_2_counts.index, y = q17_2_counts.values, color = "pink")

# Add title and labels
plt.title('Overall Rating Of Rides And Attractions')
plt.xlabel('Rating (1-5)')
plt.ylabel('Number Of Respondants')

# Add grid lines for better readability
plt.grid(axis = 'y', linestyle = '--', alpha = 0.7)

# Annotate the bars with the count values
for i, count in enumerate(q17_2_counts.values):
    plt.text(i, count + 0.1, str(count), ha='center', va='bottom', fontsize=12)

# Show the plot
plt.show()

"""##### Section 3: Entertainment And Performances"""

# Create a count of values in q17_3
q17_3_counts = df_satisfaction_scores['q17_3'].value_counts().sort_index()

# Create the bar plot
plt.figure(figsize = (15, 8))
sns.barplot(x = q17_3_counts.index, y = q17_3_counts.values, color = "orange")

# Add title and labels
plt.title('Overall Rating Of Entertainment And Performances')
plt.xlabel('Rating (1-5)')
plt.ylabel('Number Of Respondants')

# Add grid lines for better readability
plt.grid(axis = 'y', linestyle = '--', alpha = 0.7)

# Annotate the bars with the count values
for i, count in enumerate(q17_3_counts.values):
    plt.text(i, count + 0.1, str(count), ha='center', va='bottom', fontsize=12)

# Show the plot
plt.show()

"""##### Section 4: Food And Beverage"""

# Create a count of values in q17_4
q17_4_counts = df_satisfaction_scores['q17_4'].value_counts().sort_index()

# Create the bar plot
plt.figure(figsize = (15, 8))
sns.barplot(x = q17_4_counts.index, y = q17_4_counts.values, color = "purple")

# Add title and labels
plt.title('Overall Rating Of Food And Bevarege')
plt.xlabel('Rating (1-5)')
plt.ylabel('Number Of Respondants')

# Add grid lines for better readability
plt.grid(axis = 'y', linestyle = '--', alpha = 0.7)

# Annotate the bars with the count values
for i, count in enumerate(q17_4_counts.values):
    plt.text(i, count + 0.1, str(count), ha='center', va='bottom', fontsize=12)

# Show the plot
plt.show()

"""##### Section 5: Merchandise And Shopping"""

# Create a count of values in q17_5
q17_5_counts = df_satisfaction_scores['q17_5'].value_counts().sort_index()

# Create the bar plot
plt.figure(figsize = (15, 8))
sns.barplot(x = q17_5_counts.index, y = q17_5_counts.values, color = "darkblue")

# Add title and labels
plt.title('Overall Rating Of Merchandise And Shopping')
plt.xlabel('Rating (1-5)')
plt.ylabel('Number Of Respondants')

# Add grid lines for better readability
plt.grid(axis = 'y', linestyle = '--', alpha = 0.7)

# Annotate the bars with the count values
for i, count in enumerate(q17_5_counts.values):
    plt.text(i, count + 0.1, str(count), ha='center', va='bottom', fontsize=12)

# Show the plot
plt.show()

"""##### Section 6: Crowd Management, Comfort And Staff Helpfulness"""

# Create a count of values in q17_6
q17_6_counts = df_satisfaction_scores['q17_6'].value_counts().sort_index()

# Create the bar plot
plt.figure(figsize = (15, 8))
sns.barplot(x = q17_6_counts.index, y = q17_6_counts.values, color = "magenta")

# Add title and labels
plt.title('Overall Rating Of Crowd Management, Comfort And Staff Helpfulness')
plt.xlabel('Rating (1-5)')
plt.ylabel('Number Of Respondants')

# Add grid lines for better readability
plt.grid(axis = 'y', linestyle = '--', alpha = 0.7)

# Annotate the bars with the count values
for i, count in enumerate(q17_6_counts.values):
    plt.text(i, count + 0.1, str(count), ha='center', va='bottom', fontsize=12)

# Show the plot
plt.show()

"""Key Insights From The Graphs:

1) The mode ratings for Ticketing Information Accessibility, Ride And Attractions and Entertainment And Performances are 4, indicating a general slightly positive satisfaction rates among the survey respondants.

2) The mode ratings for Food And Beverage, Merchandise And Shopping and Crowd Management, Comfort and Staff Helpfulness are 3, indicating that the majority of the survey responsdants are less satisifed with these three categories, with barely passable satisfaction rates.

3) A significantly high number of respondants gave a satisfaction rating of 2 for the Food And Beverage section of USS (more than 100 respondants out of 505 respondants, around 20%), suggesting that a considerable number of people are disastisfied with the Food and Beverage category of USS. Likewise, the number of respondants who gave a rating of 5 for the Food And Beverage category (around 25) is significantly lower compared to the rest of the categories (close to 50 or more).

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Afterwards, we can proceed to assess the guest happiness for each section of USS using the Customer Satisfaction Score (CSAT) metric, which is a direct survey metric assessing guest happiness

To calculate the CSAT score, add the positive responses (ratings of 4 or 5 out of 5) together, divide them by the total number of responses collected, then multiply by 100. The resulting figure is the overall percentage of customers who are satisfied by the organization's product or services. CSAT can provide feedback on a customer interaction at multiple touchpoints in real-time.

The formula for CSAT is given:  **CSAT (Cat. N) = Sum of guest ratings (ratings of 4-5 for Cat. N) / Number Of Responses (Cat. N)**

Based on the industry benchmark given in the website, it stated several industries and their corresponding CSAT benchmark scores (eg. banking is 80, airlines is 77 etc.). For simplicity, we will assume that the suitable benchmark for the entertainment venues like USS is 80, around the average of all the indutries stated in the website. A CSAT score of below 80 suggests the need for improvement for USS.

Link To CSAT Information: https://www.ibm.com/think/topics/csat-customer-satisfaction-score#:~:text=A%20CSAT%20is%20obtained%20by,to%20measure%20overall%20customer%20experience
"""

# Finding the number of respondants with rating of 4 or 5 for the various sections of USS
df_satisfaction_scores.iloc[:, 1:-1] = df_satisfaction_scores.iloc[:, 1:-1].apply(pd.to_numeric, errors = 'coerce')

# Count the number of rows where each column contains 4 or 5
counts = (df_satisfaction_scores.iloc[:, 1:-1] >= 4).sum()

# Column Names (List Form)
columns = [
    "Ticketing Information Accessibility",
    "Rides And Attractions",
    "Entertainment And Performances",
    "Food And Beverage",
    "Merchandise And Shopping",
    "Crowd Management, Comfort And Staff Helpfulness"
]

# Print the number of responses with ratings 4 or 5 for each category
print("Number of responses with ratings of 4 or 5:\n")

for i in range(len(columns)):
    print(f"{columns[i]} : {counts.iloc[i]}")

"""We can observe that among the six sections of USS, Rides And Attractions have the highest number of responses with ratings 4 or 5 (330 responses) while Food And Beverage has the lowest number of responses with ratings 4 or 5 (159 responses). Next, we can compute the CSAT scores by calculating the  corresponding percentages of respondants surveyed who gave ratings of 4 and 5 for each section of USS."""

# Obtaining The CSAT Scores for each section of USS
csat_scores = (counts / len(df_satisfaction_scores)) * 100

# Print the CSAT scores
print("CSAT Scores:\n")

for i in range(len(columns)):
    print(f"{columns[i]} : {csat_scores.iloc[i]:.1f}%")

"""From the CSAT scores, we identified that Rides And Attractions section has the highest percentage of 65.3% while Food And Beverage section has the lowest CSAT score of 31.5%. The top three lowest CSAT scores are from the categories - Food And Beverage, Merchandise And Shopping and Crowd Management, Comfort and Staff Helpfulness. However, all the six categories have CSAT percentages lower than the recommended benchmark of 80%, indicating that USS is currently still not up to standard in maintaining customer satisfaction.

We will proceed to the next step, where we will determine the most important factors that will affect guest satisfaction scores

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#### Step 2: Extract the relevant columns to determine the most important factors that will affect guest satisfaction scores

For determining the most important factors that will affect guest satisfaction scores, we will extract the relevant columns from the original dataset. The important columns to tackle this part are:

*   `q19_1` (How important is ticketing information accessibility to your overall satisfaction?)
*   `q19_2` (How important is crowd management to your overall satisfaction?)
*   `q19_3` (How important is staff helpfulness to your overall satisfaction?)
*   `q19_4` (How important is safety and cleanliness to your overall satisfaction?)
*   `q19_5` (How important is rides and attractions to your overall satisfaction?)
*   `q19_6` (How important is food and beverage to your overall satisfaction?)
*   `q19_7` (How important is merchandise and shopping to your overall satisfaction?)
*   `q19_8` (How important is entertainment and performances to your overall satisfaction?)

We will extract the relevant columns from the dataset first to remove all the unnecessary columns as well as for better readibility and faster running times.
"""

# Extracting the relevant columns for analysis (q19 all parts)
df_importance = df[['q19_1', 'q19_2', 'q19_3', 'q19_4', 'q19_5',
                    'q19_6', 'q19_7', 'q19_8']]

# Displaying the releavnt columns
print(df_importance.head())

"""In order to determine the sections that matter most to the satisfaction rates of the customers of USS, we can use the following calculation to get the mean importance factor from customers for the respective sections. The section that has the highest mean importance rating will be the most important factor that will affect guest satisfaction scores. (We will rank these sections accordingly using a bar chart subsequently)

**Mean Importance Rating (Section N) = Sum Of Importance Rating (Section N) / Total Number Of Responses**

***NOTE: As these survey questions are optional for a user to respond, there might be several NA values in the dataset for the columns of q19. Hence, we need to handle the NA values accordingly by removing the rows containing NA values for each subquestion in q19.***
"""

# Convert columns to numeric (handling non-numeric values if any)
df_importance = df_importance.apply(pd.to_numeric, errors='coerce')

# Total sum for each column
column_sums = df_importance.sum()

# Total number of non-NaN responses per column
valid_counts = df_importance.notna().sum()

# Compute mean manually (sum / count)
column_means = column_sums / valid_counts

# Column names for readability
columns = ["Ticketing Information Accessibilty", "Crowd Management",
           "Staff Helpfulness", "Safety And Cleanliness", "Rides And Attractions",
           "Food And Beverage", "Merchandise And Shopping", "Entertainment And Performances"]

# Print the mean importance values in a readable format
print("Mean Importance Values:\n")

for i in range(len(columns)):
    print(f"{columns[i]} : {column_means.iloc[i]:.2f}")

"""From the results obtained, we can see that Safety And Cleanliness has the highest mean importance value of 3.67, followed by Crowd Management and Staff Helpfulness of 3.49. Merchandise And Shopping has the lowest mean importance value of 2.84. This is probably because some customers do not visit merchandise stores in USS due to a myriad of reasons such as goods being too expensive, insufficient time to visit the stores and some customers are not into shopping.

We can proceed to plot a bar chart (sorted by the mean value of importance in descending order) to visualize the importance of the respective features for more effective comparisons.
"""

# Assign new column names to the computed means
column_means.index = columns

# Sort the means in descending order
sorted_means = column_means.sort_values(ascending = False).reset_index()

# Rename columns for Seaborn compatibility
sorted_means.columns = ["Factors", "Mean Importance Score"]

# Plot the bar chart with hue assignment
plt.figure(figsize=(15, 8))
sns.barplot(data = sorted_means, x = "Mean Importance Score",  y = "Factors",
            hue="Factors", palette = "Blues_r", legend = False)

# Add titles and labels
plt.xlabel("Mean Importance Score")
plt.ylabel("Factors")
plt.title("Ranked Mean Importance of Factors")

# Display the values on the bars
for index, value in enumerate(sorted_means["Mean Importance Score"]):
    plt.text(value + 0.05, index, f"{value:.2f}", va="center")

# Show the plot
plt.show()

"""The bars are ordered by the mean importance, where the bars in darher shades of blue represent more important factors while the bars in lighter shades in blue represent less important factors. We notice that Staff Helpfulness has the darkest blue bar, indicating that the mean importance of Staff Helpfulness is the highest. Other factors such as Entertainment And Performances, Food And Beverage and Merchandise And Shopping have lighter blue bars, indicating that their mean importance values are lower.


From the results obtained from both Step 1 and Step 2, we can proceed to the next step - identifying pain points from customers that affect satisfaction rates for the various sections at USS. This step is crucial as for each section of USS (eg. Rides And Attractions), there are many possible reasons why customers are unsastisfied (eg. For Rides And Attractions - possible reasons include wait time for attractions, variety of rides and attractions, availability and maintenance of attractions etc.). We need to pinpoint exactly the main factors that affect the satisfaction ratings of each section of USS so that strategies can be tailored to focus more on the users' pain points for an enhanced user experience at USS.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#### Step 3: Identifying pain points from customers that affect satisfaction rates for the various sections at USS

For determining the most important factors that will affect guest satisfaction scores, we will extract the relevant columns from the original dataset. The important columns to tackle this part are:

*   `q18_1` (For ticketing information accessibility, which of the following services are you not satisfied with?)
*   `q18_2` (For rides and attractions, which of the following services are you not satisfied with?)
*   `q18_3` (For entertainment and performances, which of the following services are you not satisfied with?)
*   `q18_4` (For food and beverage, which of the following services are you not satisfied with?)
*   `q18_5` (For merchandise and shopping, which of the following services are you not satisfied with?)
*   `q18_6` (For crowd management, comfort and staff helpfulness, which of the following services are you not satisfied with?)

These are the columns which the respondants identify the reasons why their satisfaction rates for the sections are low and what can be improved subsequently. We will extract the relevant columns from the dataset first to remove all the unnecessary columns as well as for better readibility and faster running times.
"""

# Extracting the relevant columns for analysis (q18 all parts)
df_improvements = df[['q18_1', 'q18_2', 'q18_3', 'q18_4', 'q18_5', 'q18_6']]

# Displaying the releavnt columns
print(df_improvements.head())

"""For these columns, we need to perform some data cleaning first as many of the entries contain more than one reason, separated by commas. We should target each column one-by-one to delve deeper into the most frequent reason for customers' disastisfaction for each section.

##### Section 1: Ticketing Information And Accessibility
"""

# Ensure a copy is made to avoid modifying a slice
df_improvements = df_improvements.copy()

# Remove thumbs-up emoji safely using .loc
df_improvements.loc[:, "q18_1"] = df_improvements["q18_1"].str.replace("👍", "", regex=False).str.strip()

# Split values by comma, flatten the list, and count occurrences
feature_counts = df_improvements["q18_1"].dropna().str.split(", ").explode().value_counts().reset_index()
feature_counts.columns = ["Feature", "Count"]

# Display the count of each feature
print(feature_counts)

"""From the following information, we will ignore the last two printed outputs of "Price" and "Not taking into account soft toy like me!" as they contain negligible number of responses (only 1 response of the category). We will keep the rest of the categories. We observe that Queueing Time At Entry contain the highest proportion of customer disastisfaction (182), followed by Promotions/Discounts (168) and Ease Of Accessing Information (153). We can plot these counts using a bar chart for better analysis and insights."""

# Define unwanted entries
unwanted_entries = ["Price", "Not taking into account soft toy like me!"]

# Remove unwanted features
filtered_feature_counts = feature_counts[~feature_counts["Feature"].isin(unwanted_entries)]

# Sort values by count in descending order
filtered_feature_counts = filtered_feature_counts.sort_values(by = "Count", ascending = False)

# Plot using seaborn
plt.figure(figsize = (15, 7))
ax = sns.barplot(data = filtered_feature_counts, x = "Feature", y = "Count", hue = "Feature",
                 palette = "viridis", legend = False)

# Add count values on top of bars
for container in ax.containers:
    ax.bar_label(container, fmt = '%d', fontsize = 12, padding = 5)

# Formatting the chart
plt.xticks(rotation = 45, ha = "right")
plt.xlabel("Unsastisfaction Reason")
plt.ylabel("Number Of Respondants")
plt.title("Ticketing Information And Accessibilty Unsastisfaction Reasons")
plt.show()

"""We will repeat the process five more times for the five remaining categories - Rides And Attractions, Entertainment And Performances, Food And Beverage, Merchandise And Shopping, Crowd Management, Comfort And Staff Helpfulness.

##### Section 2: Rides And Attractions
"""

# Remove thumbs-up emoji safely using .loc
df_improvements.loc[:, "q18_2"] = df_improvements["q18_2"].str.replace("👍", "", regex=False).str.strip()

# Split values by comma, flatten the list, and count occurrences
feature_counts = df_improvements["q18_2"].dropna().str.split(", ").explode().value_counts().reset_index()
feature_counts.columns = ["Feature", "Count"]

# Display the count of each feature
print(feature_counts)

"""From the following information, we will ignore last printed output of "Not taking into account soft toy like me!" as it contains negligible number of responses (only 1 response). We will keep the rest of the categories. We observe that Wait Time For Attractions contain the highest proportion of customer disastisfaction (253), followed by Variety Of Rides And Attractions (221) and Queue Management (180). We can plot these counts using a bar chart for better analysis and insights."""

# Define unwanted entries
unwanted_entries = ["Not taking into account soft toy like me!"]

# Remove unwanted features
filtered_feature_counts = feature_counts[~feature_counts["Feature"].isin(unwanted_entries)]

# Sort values by count in descending order
filtered_feature_counts = filtered_feature_counts.sort_values(by = "Count", ascending = False)

# Plot using seaborn
plt.figure(figsize = (15, 7))
ax = sns.barplot(data = filtered_feature_counts, x = "Feature", y = "Count", hue = "Feature",
                 palette = "viridis", legend = False)

# Add count values on top of bars
for container in ax.containers:
    ax.bar_label(container, fmt = '%d', fontsize = 12, padding = 5)

# Formatting the chart
plt.xticks(rotation = 45, ha = "right")
plt.xlabel("Unsastisfaction Reason")
plt.ylabel("Number Of Respondants")
plt.title("Rides And Attractions Unsastisfaction Reasons")
plt.show()

"""##### Section 3: Entertainment And Performances"""

# Remove thumbs-up emoji safely using .loc
df_improvements.loc[:, "q18_3"] = df_improvements["q18_3"].str.replace("👍", "", regex=False).str.strip()

# Split values by comma, flatten the list, and count occurrences
feature_counts = df_improvements["q18_3"].dropna().str.split(", ").explode().value_counts().reset_index()
feature_counts.columns = ["Feature", "Count"]

# Display the count of each feature
print(feature_counts)

"""From the following information, we will ignore last three printed outputs of "I'm just not interested", "I don't know it's just kinda boring and lame..." and "Not taking into account soft toy like me!" as they contain negligible number of responses (only 1 response per category). We will keep the rest of the categories. We observe that Variety and Availability Of Performances And Entertainment are the highest (203 each), followed by Quality of Performances And Entertainment (193). We can plot these counts using a bar chart for better analysis and insights."""

# Define unwanted entries
unwanted_entries = ["I'm just not interested", "Not taking into account soft toy like me!",
                    "I don't know it's just kinda boring and lame if you're above the age of like 12."]

# Remove unwanted features
filtered_feature_counts = feature_counts[~feature_counts["Feature"].isin(unwanted_entries)]

# Sort values by count in descending order
filtered_feature_counts = filtered_feature_counts.sort_values(by = "Count", ascending = False)

# Plot using seaborn
plt.figure(figsize = (15, 7))
ax = sns.barplot(data = filtered_feature_counts, x = "Feature", y = "Count", hue = "Feature",
                 palette = "viridis", legend = False)

# Add count values on top of bars
for container in ax.containers:
    ax.bar_label(container, fmt = '%d', fontsize = 12, padding = 5)

# Formatting the chart
plt.xticks(rotation = 45, ha = "right")
plt.xlabel("Unsastisfaction Reason")
plt.ylabel("Number Of Respondants")
plt.title("Entertainment And Performances Unsastisfaction Reasons")
plt.show()

"""##### Section 4: Food And Beverage"""

# Remove thumbs-up emoji safely using .loc
df_improvements.loc[:, "q18_4"] = df_improvements["q18_4"].str.replace("👍", "", regex=False).str.strip()

# Split values by comma, flatten the list, and count occurrences
feature_counts = df_improvements["q18_4"].dropna().str.split(", ").explode().value_counts().reset_index()
feature_counts.columns = ["Feature", "Count"]

# Display the count of each feature
print(feature_counts)

"""From the following information, we will ignore last printed output of "Not taking into account soft toy like me!" as it contains negligible number of responses (only 1 response). We will keep the rest of the categories. We observe that Prices Of Food And Beverages contain the highest proportion of customer disastisfaction (265), followed by Quality Of Food And Beverages (201) and Wait Time For Food And Beverages (182). We can plot these counts using a bar chart for better analysis and insights."""

# Define unwanted entries
unwanted_entries = ["Not taking into account soft toy like me!"]

# Remove unwanted features
filtered_feature_counts = feature_counts[~feature_counts["Feature"].isin(unwanted_entries)]

# Sort values by count in descending order
filtered_feature_counts = filtered_feature_counts.sort_values(by = "Count", ascending = False)

# Plot using seaborn
plt.figure(figsize = (15, 7))
ax = sns.barplot(data = filtered_feature_counts, x = "Feature", y = "Count", hue = "Feature",
                 palette = "viridis", legend = False)

# Add count values on top of bars
for container in ax.containers:
    ax.bar_label(container, fmt = '%d', fontsize = 12, padding = 5)

# Formatting the chart
plt.xticks(rotation = 45, ha = "right")
plt.xlabel("Unsastisfaction Reason")
plt.ylabel("Number Of Respondants")
plt.title("Food And Beverage Unsastisfaction Reasons")
plt.show()

"""##### Section 5: Merchandise And Shopping"""

# Remove thumbs-up emoji safely using .loc
df_improvements.loc[:, "q18_5"] = df_improvements["q18_5"].str.replace("👍", "", regex=False).str.strip()

# Split values by comma, flatten the list, and count occurrences
feature_counts = df_improvements["q18_5"].dropna().str.split(", ").explode().value_counts().reset_index()
feature_counts.columns = ["Feature", "Count"]

# Display the count of each feature
print(feature_counts)

"""For this section, there are several entries that require further data cleaning. For instance, there is one entry "I Am Satisfied ," with an extra comma. The comma needs to be removed and we need to increase the "I Am Satisfied" category by one. Similarly, there is another entry called "Price of Souvenirs" where the letter "o" is in small letter. We need to change the "o" to capital "O" and increase the "Price Of Souvenirs" category by one as well.

This can be done using the `replace()` methd in pandas where the entry before the colon is the original feature name and the entry after the colon is the modified feature name. We can pass multiple entries separated by commas in a dictionary `{}`. Afterwards, we need to regroup the entries once more using the `groupby()` method and use `.sum()` to tabulate the count of each category.
"""

# Standardize "Price of Souvenirs" to "Price Of Souvenirs"
# Remove the extra comma after "I Am Satisfied"
feature_counts["Feature"] = feature_counts["Feature"].replace(
    {"Price of Souvenirs": "Price Of Souvenirs", "I Am Satisfied ,": "I Am Satisfied"}
)

# Group by feature again to merge counts
feature_counts = feature_counts.groupby("Feature", as_index=False).sum()

# Display corrected data
print(feature_counts)

"""From the following information, we will ignore two printed outputs of "Crowd Management" and "Not taking into account soft toy like me!" as it contains negligible number of responses (only 1 response per category). We will keep the rest of the categories. We observe that Prices Of Souvenirs contain the highest proportion of customer disastisfaction (279), followed by Availability And Variety of souvenirs (193) and Quality Of Souvenirs (183). We can plot these counts using a bar chart for better analysis and insights."""

# Define unwanted entries
unwanted_entries = ["Crowd Management", "Not taking into account soft toy like me!"]

# Remove unwanted features
filtered_feature_counts = feature_counts[~feature_counts["Feature"].isin(unwanted_entries)]

# Sort the DataFrame by Count in descending order
filtered_feature_counts = filtered_feature_counts.sort_values(by = "Count", ascending = False)

# Plot using seaborn
plt.figure(figsize = (15, 7))
ax = sns.barplot(data = filtered_feature_counts, x = "Feature", y = "Count", hue = "Feature",
                 palette = "viridis", legend = False)

# Add count values on top of bars
for container in ax.containers:
    ax.bar_label(container, fmt = '%d', fontsize = 12, padding = 5)

# Formatting the chart
plt.xticks(rotation = 45, ha = "right")
plt.xlabel("Unsatisfaction Reason")
plt.ylabel("Number Of Respondents")
plt.title("Merchandise And Shopping Unsatisfaction Reasons")
plt.show()

"""##### Section 6: Crowd Management, Comfort and Staff Helpfulness"""

# Remove thumbs-up emoji safely using .loc
df_improvements.loc[:, "q18_6"] = df_improvements["q18_6"].str.replace("👍", "", regex=False).str.strip()

# Split values by comma, flatten the list, and count occurrences
feature_counts = df_improvements["q18_6"].dropna().str.split(", ").explode().value_counts().reset_index()
feature_counts.columns = ["Feature", "Count"]

# Display the count of each feature
print(feature_counts)

"""For this section, there are also several entries that require further data cleaning. For instance, there is one entry "Staff Helpfulness And Efficiency," with an extra comma. The comma needs to be removed and we need to increase the "Staff Helpfulness And Efficiency" category by one. Similarly, there is another entry called "Cleanliness of USS" where the letter "o" is in small letter. We need to change the "o" to capital "O" and increase the "Cleanliness Of USS" category by one as well.

This can be done using the `replace()` methd in pandas where the entry before the colon is the original feature name and the entry after the colon is the modified feature name. We can pass multiple entries separated by commas in a dictionary `{}`. Afterwards, we need to regroup the entries once more using the `groupby()` method and use `.sum()` to tabulate the count of each category.
"""

# Standardize "Price of Souvenirs" to "Price Of Souvenirs"
# Remove the extra comma after "Staff Helpfulness And Efficiency"
feature_counts["Feature"] = feature_counts["Feature"].replace(
    {"Cleanliness of USS": "Cleanliness Of USS",
     "Staff Helpfulness And Efficiency,": "Staff Helpfulness And Efficiency"}
)

# Group by feature again to merge counts
feature_counts = feature_counts.groupby("Feature", as_index=False).sum()

# Display corrected data
print(feature_counts)

"""From the following information, we will ignore the printed output of "Not taking into account soft toy like me!" as it contains negligible number of responses (only 1 response). We will keep the rest of the categories. We observe that Crowd Managament contain the highest proportion of customer disastisfaction (192), followed by Availability Of Shelters And Rest Areas (176) and Safety And Security Of USS (164). We can plot these counts using a bar chart for better analysis and insights."""

# Define unwanted entries
unwanted_entries = ["Not taking into account soft toy like me!"]

# Remove unwanted features
filtered_feature_counts = feature_counts[~feature_counts["Feature"].isin(unwanted_entries)]

# Sort values by count in descending order
filtered_feature_counts = filtered_feature_counts.sort_values(by = "Count", ascending = False)

# Plot using seaborn
plt.figure(figsize = (15, 7))
ax = sns.barplot(data = filtered_feature_counts, x = "Feature", y = "Count", hue = "Feature",
                 palette = "viridis", legend = False)

# Add count values on top of bars
for container in ax.containers:
    ax.bar_label(container, fmt = '%d', fontsize = 12, padding = 5)

# Formatting the chart
plt.xticks(rotation = 45, ha = "right")
plt.xlabel("Unsatisfaction Reason")
plt.ylabel("Number Of Respondents")
plt.title("Crowd Management, Comfort and Staff Helpfulness Unsatisfaction Reasons")
plt.show()

"""From the six bar graphs plotted, we can now easily identify the top three reasons for each section that contribute to high unsastisfaction rates among respondants so that USS can focus on strategies and solutions that can tackle these unsastisfaction reasons more easily.

Also, for each of the sections of USS, we can also compare the number of respondants who selected "I Am Satsfied" to gauge the proportion of customers who are truly satisfied with USS without any complaints. Among the six bar graphs, Entertainment And Performances have the highest number of respondants who are satisfied (92) while Food And Beverage has the lowest number of respondants who are satisfied (32). Other sections such as Rides And Attractions (38) and Merchandise And Shopping (57) also have fairly low satisfaction rates, where most customers have at least one reason for their unsastifaction in these sections.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#### Summary Of The Results For The Three Steps:

##### **Step 1: Extract the relevant columns for determining the current guest satisfaction scores for the various sections at USS, as well as the overall guest satisfaction score of USS**

We used several metrics in this step such as the **Net Promoter Score (NPS)** and the **Customer Satisfaction Score (CSAT)** to guage current satisfaction rates in USS, as well as determining whether the current satisfaction rates in USS is sufficient when compared to their benchmarks. We **set the benchmark of NPS to 30% and CSAT to 80%** based on the websites' information.

From the results obtained through the survey responses:

*   Number Of Detractors > Number Of Promoters (Area For Concern)
*   NPS Score: -9.7% (Lower than benchmark of 30%, negative value)
*   CSAT Scores For All Sections Of USS around 30% to 60% (Lower than benchmark of 80%)

The following table shows the CSAT scores for the various sections of USS:


  <!DOCTYPE html>
  <html lang="en">
  <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <style>
          table {
              width: 50%;
              border-collapse: collapse;
              margin: 20px 0;
          }
          th, td {
              border: 1px solid black;
              padding: 10px;
              text-align: center;
          }
      </style>
  </head>
  <body>
      <table>
          <thead>
              <tr>
                  <th>Section Of USS</th>
                  <th>CSAT Scores(%)</th>
                  <th>Satisfaction Status</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <td>Ticketing Information And Accessibility</td>
                  <td>56.4%</td>
                  <td>Fairly Satisfied - Can Be Improved</td>
              </tr>
              <tr>
                  <td>Rides And Attractions</td>
                  <td>65.3%</td>
                  <td>Fairly Satisfied - Can Be Improved</td>
              </tr>
              <tr>
                  <td>Entartainment And Performances</td>
                  <td>53.5%</td>
                  <td>Fairly Satisfied - Can Be Improved</td>
              </tr>
              <tr>
                  <td>Food And Beverage</td>
                  <td>31.5%</td>
                  <td>Poor Satisfaction - Needs Work</td>
              </tr>
              <tr>
                  <td>Merchandise And Shopping</td>
                  <td>39.6%</td>
                  <td>Poor Satisfaction - Needs Work</td>
              </tr>
              <tr>
                  <td>Crowd Management, Comfort And Staff Helpfulness</td>
                  <td>46.5%</td>
                  <td>Poor Satisfaction - Needs Work</td>
              </tr>
      </table>
  </body>
  </html>

From the results in Step 1, we can conclude that USS is currently not meeting its optimal satisfaction scores in terms of both NPS and CSAT. This is because the number of detractors is greater than the number of promoters. USS is required to further understand why the satisfaction rates for USS is not ideal and pinpoint customer's disastisfaction reasons for more tailored strategies subsequently.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

##### **Step 2: Extract the relevant columns to determine the most important factors that will affect guest satisfaction scores**

We used another metric called the Mean Importance Value to identify the top three factors that affect guest satisfaction scores in USS among the seven listed in the survey - Safety And Cleanliness, Crowd Management, Staff Helpfulness, Rides And Attractions, Food And Beverage, Merchandise And Shopping, Entertainment And Performances. The factor with the highest Mean Importance Value will be the most important factor in determining customer sastisfaction.

The following table shows the Mean Importance Values for the various subsections of USS:


  <!DOCTYPE html>
  <html lang="en">
  <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <style>
          table {
              width: 50%;
              border-collapse: collapse;
              margin: 20px 0;
          }
          th, td {
              border: 1px solid black;
              padding: 10px;
              text-align: center;
          }
      </style>
  </head>
  <body>
      <table>
          <thead>
              <tr>
                  <th>Subsection Of USS</th>
                  <th>Mean Importance Values (out of 5)</th>
                  <th>Priority Ranking</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <td>Staff Helpfulness</td>
                  <td>3.67</td>
                  <td>1</td>
              </tr>
              <tr>
                  <td>Safety And Cleanliness</td>
                  <td>3.49</td>
                  <td>2</td>
              </tr>
              <tr>
                  <td>Crowd Management</td>
                  <td>3.49</td>
                  <td>3</td>
              </tr>
              <tr>
                  <td>Rides And Attractions</td>
                  <td>3.42</td>
                  <td>4</td>
              </tr>
              <tr>
                  <td>Entertainment And Performances</td>
                  <td>3.09</td>
                  <td>5</td>
              </tr>
              <tr>
                  <td>Food And Beverage</td>
                  <td>3.03</td>
                  <td>6</td>
              </tr>
              <tr>
                  <td>Merchandise And Shopping</td>
                  <td>2.84</td>
                  <td>7</td>
              </tr>
      </table>
  </body>
  </html>


The top three sections that require higher priority are Staff Helpfulness, Safety And Cleanliness and Crowd Management. However, we should not overlook the other sections as well as the mean importance values for the reamining categories are still relatively high, with almost all sections having ratings of higher than 3 (except for Merchandise And Shopping, 2.84)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

##### **Step 3: Identifying pain points from customers that affect satisfaction rates for the various sections at USS**

Each section of Universal Studios Singapore (USS) has multiple factors listed in the survey that may contribute to customer dissatisfaction. Additionally, customers have the option to provide their own responses if their concerns are not covered in the predefined survey options.

To identify the key areas for improvement, we determine the top three dissatisfaction factors for each category by analyzing the response count. The higher the number of responses for a particular reason, the greater its priority in addressing guest dissatisfaction. This data-driven approach ensures that USS focuses on the most impactful areas to enhance the overall visitor experience.

The following table shows the sections of USS, as well as the top three reasons for high unsastisfaction rates for each section:


  <!DOCTYPE html>
  <html lang="en">
  <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <style>
          table {
              width: 50%;
              border-collapse: collapse;
              margin: 20px 0;
          }
          th, td {
              border: 1px solid black;
              padding: 10px;
              text-align: center;
          }
      </style>
  </head>
  <body>
      <table>
          <thead>
              <tr>
                  <th>Section Of USS</th>
                  <th>Top Unsastisfaction Reason</th>
                  <th>Second Unsastisfaction Reason</th>
                  <th>Third Unsastisfaction Reason</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <td>Ticketing Information And Accessibility</td>
                  <td>Queueing Time At Entry</td>
                  <td>Promotions/Discounts</td>
                  <td>Ease Of Accessing Information</td>
              </tr>
              <tr>
                  <td>Rides And Attractions</td>
                  <td>Wait Times For Attractions</td>
                  <td>Variety Of Rides And Attractions</td>
                  <td>Queue Management</td>
              </tr>
              <tr>
                  <td>Entertainment And Performances</td>
                  <td>Variety Of Performances</td>
                  <td>Availability Of Performances</td>
                  <td>Quality Of Performances</td>
              </tr>
              <tr>
                  <td>Food And Beverage</td>
                  <td>Price Of Food And Beverage</td>
                  <td>Quality Of Food And Beverage</td>
                  <td>Wait Times Of Food And Beverage</td>
              </tr>
              <tr>
                  <td>Merchandise And Shopping</td>
                  <td>Price Of Souvenirs</td>
                  <td>Availability And Variety Of Souvenirs</td>
                  <td>Quality Of Souvenirs</td>
              </tr>
              <tr>
                  <td>Crowd Management, Comfort And Staff Helpfulness</td>
                  <td>Crowd Management</td>
                  <td>Availability Of Shelters And Rest Areas</td>
                  <td>Safety And Security Of USS</td>
              </tr>
      </table>
  </body>
  </html>

The primary drivers of guest satisfaction for USS will be the top unsastisfaction reasons that USS is currently facing:

*   Ticketing Information And Accesibility: **Queueing Time At Entry**
*   Rides And Attractions: **Wait Times For Attractions**
*   Entertainment And Performances: **Variety Of Performances**
*   Food And Beverage: **Price Of Food And Beverage**
*   Merchandise And Shopping: **Price Of Souvenirs**
*   Crowd Management, Comfort And Staff Helpfulness: **Crowd Management**

For these unsastisfaction reasons identified, we can subsequently think of strategies that USS can adopt to increase customer satisfaction rates in the future. Our aim is to increase the NPS score to a value of at least 30%, as well as increase the CSAT scores of the various sections of USS to the benchmark of 80% (which illustrates satisfactory to well-performing in customer satisfaction) by the end of next year so that more guests can have  more enjoyable experiences at USS with the strategies that will be implemented to improve customer satisfaction rates.

****************************************************************************************************************************************************************
"""